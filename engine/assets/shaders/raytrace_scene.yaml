# ================================================================================================
#  workshop
#  Copyright (C) 2022 Tim Leonard
# ================================================================================================
type: shader
version: 1

# This effect does a simple raytrace of the scene and emits the results to
# a render target. This is mostly here for debugging the raytracing pipeline.

imports: [ data:shaders/common.yaml ]

effects:
  raytrace_scene:
    techniques:
      raytrace_scene: {}
   
param_blocks:
  scene_instance_data:
    scope: indirect
    fields:
      material_table: int
      material_offset: int
      model_index: int
      model_offset: int
      gpu_flags: int

  raytrace_scene_parameters:
    scope: draw
    fields:
      scene_tlas: tlas
      scene_tlas_instance_data: byteaddressbuffer

ray_hitgroups:
  opaque_hitgroup:
    material_domain: opaque
    ray_closest_hit_shader: 
      file: data:shaders/source/raytrace_scene.hlsl
      entry: ray_closest_hit_opaque

  masked_hitgroup:
    material_domain: masked
    ray_closest_hit_shader: 
      file: data:shaders/source/raytrace_scene.hlsl
      entry: ray_closest_hit_masked
      
  transparent_hitgroup:
    material_domain: transparent
    ray_any_hit_shader: 
      file: data:shaders/source/raytrace_scene.hlsl
      entry: ray_any_hit_transparent
      
  sky_hitgroup:
    material_domain: sky
    ray_closest_hit_shader: 
      file: data:shaders/source/raytrace_scene.hlsl
      entry: ray_closest_hit_sky

render_states:
  raytrace_scene_render_state:
    max_rt_payload_size: 32

techniques:
  raytrace_scene:
    ray_generation_shader: 
      file: data:shaders/source/raytrace_scene.hlsl
      entry: ray_generation
    ray_miss_shader: 
      file: data:shaders/source/raytrace_scene.hlsl
      entry: ray_miss
    ray_hitgroups: [ opaque_hitgroup, masked_hitgroup, transparent_hitgroup, sky_hitgroup  ]
    render_state: raytrace_scene_render_state
    param_blocks: [ raytrace_scene_parameters  ]