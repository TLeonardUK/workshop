# ================================================================================================
#  workshop
#  Copyright (C) 2022 Tim Leonard
# ================================================================================================
type: shader
version: 1

# This effect is used to render static unskinned geometry.

imports: [ data:shaders/common.yaml ]

effects:
  static_geometry:
    techniques:
      static_geometry_wireframe: 
        wireframe: [ true ]
        depth_only: [ false ]

      static_geometry_masked: 
        domain: [ masked ]
        wireframe: [ false ]
        depth_only: [ false ]

      static_geometry_opaque: 
        domain: [ opaque ]
        wireframe: [ false ]
        depth_only: [ false ]
        
      static_geometry_masked_depth_only: 
        domain: [ masked ]
        wireframe: [ false ]
        depth_only: [ true ]
        depth_linear: [ false ]

      static_geometry_opaque_depth_only: 
        domain: [ opaque ]
        wireframe: [ false ]
        depth_only: [ true ]
        depth_linear: [ false ]
        
      static_geometry_masked_depth_only_linear: 
        domain: [ masked ]
        wireframe: [ false ]
        depth_only: [ true ]
        depth_linear: [ true ]

      static_geometry_opaque_depth_only_linear: 
        domain: [ opaque ]
        wireframe: [ false ]
        depth_only: [ true ]
        depth_linear: [ true ]

techniques:
  # Technique to use when rendering wireframe geometry.
  static_geometry_wireframe:
    vertex_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: vshader
    pixel_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: pshader_opaque
    render_state: default_wireframe
    vertex_layout: geometry_vertex
    output_target: gbuffer
    param_blocks: [ gbuffer, view_info, geometry_instance_info ]

  # Technique to use when rendering basic opaque geometry.
  static_geometry_opaque:
    vertex_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: vshader
    pixel_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: pshader_opaque
    render_state: default
    vertex_layout: geometry_vertex
    output_target: gbuffer
    param_blocks: [ gbuffer, view_info, geometry_instance_info ]

  # Technique to use when rendering geometry where pixels are discarded if alpha < 0.5
  static_geometry_masked:
    vertex_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: vshader
    pixel_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: pshader_masked
    render_state: default
    vertex_layout: geometry_vertex
    output_target: gbuffer
    param_blocks: [ gbuffer, view_info, geometry_instance_info ]

  # Same as static_geometry_opaque but only outputs a depth value.
  static_geometry_opaque_depth_only:
    vertex_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: vshader_depth_only
    pixel_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: pshader_opaque_depth_only
    render_state: depth_only_render_state
    vertex_layout: geometry_vertex
    output_target: depth_only_buffer
    param_blocks: [ gbuffer, view_info, geometry_instance_info ]

  # Same as static_geometry_masked but only outputs a depth value.
  static_geometry_masked_depth_only:
    vertex_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: vshader_depth_only
    pixel_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: pshader_masked_depth_only
    render_state: depth_only_render_state
    vertex_layout: geometry_vertex
    output_target: depth_only_buffer
    param_blocks: [ gbuffer, view_info, geometry_instance_info ]

  # Same as static_geometry_opaque but only outputs a depth value, in a linear format.
  static_geometry_opaque_depth_only_linear:
    vertex_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: vshader_linear_depth_only
    pixel_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: pshader_opaque_linear_depth_only
    render_state: depth_only_render_state
    vertex_layout: geometry_vertex
    output_target: depth_only_buffer
    param_blocks: [ gbuffer, view_info, geometry_instance_info ]

  # Same as static_geometry_masked but only outputs a depth value, in a linear format
  static_geometry_masked_depth_only_linear:
    vertex_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: vshader_linear_depth_only
    pixel_shader: 
      file: data:shaders/source/static_geometry.hlsl
      entry: pshader_masked_linear_depth_only
    render_state: depth_only_render_state
    vertex_layout: geometry_vertex
    output_target: depth_only_buffer
    param_blocks: [ gbuffer, view_info, geometry_instance_info ]
